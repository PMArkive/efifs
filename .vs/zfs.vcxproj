<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{5ADAB8AE-54B6-4EF5-8FF8-884FE430BE51}</ProjectGuid>
    <ProjectName>zfs</ProjectName>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)x64\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_x64</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)ia32\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_ia32</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)arm\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_arm</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)aa64\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_aa64</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)x64\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_x64</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)ia32\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_ia32</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)arm\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_arm</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <TargetExt>.efi</TargetExt>
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)aa64\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <TargetName>$(ProjectName)_aa64</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\x86_64;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmtd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <RandomizedBaseAddress />
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\ia32;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmtd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <RandomizedBaseAddress>
      </RandomizedBaseAddress>
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\arm;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmtd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <RandomizedBaseAddress />
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\aarch64;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmtd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <RandomizedBaseAddress />
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\x86_64;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
      <Optimization>MinSpace</Optimization>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <RandomizedBaseAddress />
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4210 %(AdditionalOptions)</AdditionalOptions>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\ia32;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
      <Optimization>MinSpace</Optimization>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <RandomizedBaseAddress />
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4210 %(AdditionalOptions)</AdditionalOptions>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\arm;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
      <Optimization>MinSpace</Optimization>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <RandomizedBaseAddress />
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4210 %(AdditionalOptions)</AdditionalOptions>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\grub\include;$(SolutionDir)\grub\grub-core\lib\minilzo;$(SolutionDir)\grub\grub-core\lib\zstd;$(SolutionDir)\grub\grub-core\lib\libgcrypt\src;$(SolutionDir)\gnu-efi\inc\aarch64;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_UNICODE;UNICODE;__MAKEWITH_GNUEFI;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;GRUB_FILE=__FILE__;DRIVERNAME=$(ProjectName);DRIVERNAME_STR="ZFS";EXTRAMODULE=gzio;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <WarningLevel>Level3</WarningLevel>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/Oi- /std:clatest %(AdditionalOptions)</AdditionalOptions>
      <Optimization>MinSpace</Optimization>
    </ClCompile>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <RandomizedBaseAddress />
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SubSystem>EFI Boot Service Driver</SubSystem>
      <AdditionalDependencies>gnu-efi.lib;grub.lib;efifs.lib;libcmt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4210 %(AdditionalOptions)</AdditionalOptions>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\grub\grub-core\fs\zfs\zfs.c" />
    <ClCompile Include="..\grub\grub-core\fs\zfs\zfs_fletcher.c" />
    <ClCompile Include="..\grub\grub-core\fs\zfs\zfs_lz4.c" />
    <ClCompile Include="..\grub\grub-core\fs\zfs\zfs_lzjb.c" />
    <ClCompile Include="..\grub\grub-core\fs\zfs\zfs_sha256.c" />
    <ClCompile Include="..\grub\grub-core\io\gzio.c" />
    <ClCompile Include="..\grub\grub-core\lib\crypto.c" />
    <ClCompile Include="..\src\this.c" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\debug.vbs" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\grub\include\grub\zfs\dmu.h" />
    <ClInclude Include="..\grub\include\grub\zfs\dmu_objset.h" />
    <ClInclude Include="..\grub\include\grub\zfs\dnode.h" />
    <ClInclude Include="..\grub\include\grub\zfs\dsl_dataset.h" />
    <ClInclude Include="..\grub\include\grub\zfs\dsl_dir.h" />
    <ClInclude Include="..\grub\include\grub\zfs\sa_impl.h" />
    <ClInclude Include="..\grub\include\grub\zfs\spa.h" />
    <ClInclude Include="..\grub\include\grub\zfs\uberblock_impl.h" />
    <ClInclude Include="..\grub\include\grub\zfs\vdev_impl.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zap_impl.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zap_leaf.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zfs.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zfs_acl.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zfs_znode.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zil.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zio.h" />
    <ClInclude Include="..\grub\include\grub\zfs\zio_checksum.h" />
    <ClInclude Include="..\src\driver.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>